---

- name: install common roles
  hosts:  "{{ _host_ | default('localhost') }}"

  tasks:
    - name: disable 32 bit support
      shell: |
        apt-get remove --allow-remove-essential --purge `dpkg --get-selections | awk '/i386/{print $1}'`
        sudo dpkg --remove-architecture i386
      become: yes
      ignore_errors: yes
      
    - name: get current release
      shell: lsb_release -sc
      register: release

    - set_fact: 
        release={{ release.stdout }}

    - name: add universe repository
      become: yes
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      loop:
        - "deb http://archive.ubuntu.com/ubuntu/ {{ release }} main restricted universe multiverse"
        - "deb http://archive.ubuntu.com/ubuntu/ {{ release }}-updates main restricted universe multiverse"
        - "deb http://security.ubuntu.com/ubuntu/ {{ release }}-security main restricted universe multiverse"

    #- name: add google chrome repository
    #  become: yes
    #  ansible.builtin.apt_repository:
    #    repo: deb http://dl.google.com/linux/chrome/deb/ stable main
    #    state: present
        
    - name: Install basis software
      become: yes
      apt:
        pkg:
          - hardinfo
          - neovim
          - python3
          - python3-pip
          - grub-pc
          - build-essential 
          - cmake
          - btrfs-progs
          - linux-headers-generic
          - ecryptfs-utils
          - vim
          - docker.io
          - vlc
          - zip
          - lrzip
          - iftop
          - htop
          - nmap
          - unar
          - unison
          - usb-creator-gtk
          - imagemagick
          - ubuntu-restricted-extras
          - wget
          - xvfb
          - usb-creator-gtk
          - tor
          - torbrowser-launcher
          - gzip
          - gparted 
          - tlp           
          - google-chrome-stable
          - wmctrl
          - ttf-mscorefonts-installer
          - msttcorefonts
          - transmission
          - sshfs
          - neovim
          - bonnie++
          - gcp
          - fuse-zip
          - doublecmd-common
          - fzf
          - printer-driver-cups-pdf
          - duplicity
          - snapd
          - meld
        state: latest

    - name: install some snaps
      community.general.snap:
        name:
          - 4ktube

    - name: install lazy nvim config
      # git clone https://github.com/LazyVim/starter ~/.config/nvim
      ansible.builtin.git:
        repo: https://github.com/LazyVim/starter
        dest: "{{ lookup('env', 'USER') }}/.config/nvim"

    - name: Install some pip pacakges
      become: no
      pip:
        name:
          - sqlalchemy
          - pandas
          - requests
          - click
          - tqdm
                  
    - name: adding existing user to group docker
      become: yes
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes
        
    - name: disable spectre and co
      become: yes
      block:
        
        - name: fix_etc_default_grub
          lineinfile:
            path: /etc/default/grub
            line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet nopti nospectre_v2 spectre_v2_user=off spec_store_bypass_disable=off l1tf=off ipv6.disable=1"'
            regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*'
            state: present
            insertafter: EOF
            create: no
        
        - name: update grub
          shell: update-grub

        - name: check if systemd_boot
          stat:
             path: /boot/efi/loader/entries/Pop_OS-current.conf
          register: systemd_boot

        - name: in case of systemd-boot
          lineinfile:
            path: /boot/efi/loader/entries/Pop_OS-current.conf
            backrefs: yes
            line: 'options \1 nopti nospectre_v2 spectre_v2_user=off spec_store_bypass_disable=off l1tf=off ipv6.disable=1'
            regexp: '^options (.*) nopti nospectre_v2 spectre_v2_user=off spec_store_bypass_disable=off l1tf=off ipv6.disable=1$'
            state: present
            create: no
          when: systemd_boot.stat.exists

        - name: update boot
          shell: sudo bootctl update
          when: systemd_boot.stat.exists

    - name: increase filesystem watcher
      become: yes
      lineinfile:
        path: /etc/sysctl.conf
        backrefs: yes
        line: 'fs.inotify.max_user_watches=524288'
        regexp: '^fs.inotify.max_user_watches=.*$'
        state: present
        
    - name: Aliases
      become: no
      copy:
        dest: /home/kic/.bash_aliases
        content: |
          alias standby='systemctl suspend'
          alias vim='nvim'
          alias http-server='python3 -m http.server'
          alias apt-installed='apt-mark showmanual'
          alias ll='ls -alF'
          alias la='ls -A'
          alias l='ls -CF'
          alias df='df -h'
          alias md5="md5sum"
          alias ll="ls -lha"
          alias nettop="sudo iftop -i wlp0s20f3"
          alias wifi="nmcli dev wifi"
          alias ldot='ls -1a | grep "^\."'
          alias battary='upower -i `upower -e | grep BAT`'
          alias uncolor='sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g"'
          alias ppython='python -m ptpython --vi'
          alias netscan="nmap -sn `hostname -I | grep -Eo '^[0-9]+\.[0-9]+\.[0-9]+\.'`0/24"
          alias apt-selected='apt-mark showmanual'          
          alias open='xdg-open'
          alias venv='python -m venv'
          alias dockerpurge='docker container prune -f && docker image prune -a'
          alias scan-pdf='hp-scan -d hpaio:/net/HP_ColorLaserJet_MFP_M278-M281?ip=192.168.1.254 -r 150 -s pdf -m color --adf -o'
          alias ib_paper_gateway='docker run -it --rm --name ibgateway -e TRADING_MODE="p" -e ARGS="username=ckin1977p password=fussballFrosch112" -p 5900:5900 -p 4002:4002 -v `pwd`/Jts:/home/ibg/Jts/ ibgateway'
          alias my-os="lsb_release -a"
          systemctl() {
            if [[ "${1-}" == "log" ]]; then
              /usr/bin/journalctl -u "${@:2}";
            else /usr/bin/systemctl "$@";
            fi
          }
          gen-token() {
            echo "$1" | sha256sum | base64
          }

    - name: LocalBin
      become: yes
      copy:
        dest: /etc/profile.d/local_bin.sh
        content: |
          export PATH="$PATH:$HOME/bin"

    - name: copying binary files
      copy:
        src: ~/playbooks/bin
        dest: ~/bin

    - name: DefaultFolders
      shell: |
        rm -rf Templates Public

    - name: increase file limits
      become: yes
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^fs\.inotify\.max_user_watches='
        line: fs.inotify.max_user_watches=524288


